/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  groovy.transform.Generated
 */
package net.fortuna.ical4j.model;

import groovy.lang.MetaClass;
import groovy.transform.Generated;
import groovy.util.FactoryBuilderSupport;
import java.lang.ref.SoftReference;
import net.fortuna.ical4j.model.CalendarFactory;
import net.fortuna.ical4j.model.ParameterListFactory;
import net.fortuna.ical4j.model.component.AvailableFactory;
import net.fortuna.ical4j.model.component.DaylightFactory;
import net.fortuna.ical4j.model.component.StandardFactory;
import net.fortuna.ical4j.model.component.VAlarmFactory;
import net.fortuna.ical4j.model.component.VAvailabilityFactory;
import net.fortuna.ical4j.model.component.VEventFactory;
import net.fortuna.ical4j.model.component.VFreeBusyFactory;
import net.fortuna.ical4j.model.component.VJournalFactory;
import net.fortuna.ical4j.model.component.VTimeZoneFactory;
import net.fortuna.ical4j.model.component.VToDoFactory;
import net.fortuna.ical4j.model.component.VVenueFactory;
import net.fortuna.ical4j.model.component.XComponentFactory;
import net.fortuna.ical4j.model.parameter.AbbrevFactory;
import net.fortuna.ical4j.model.parameter.AltRepFactory;
import net.fortuna.ical4j.model.parameter.CnFactory;
import net.fortuna.ical4j.model.parameter.CuTypeFactory;
import net.fortuna.ical4j.model.parameter.DelegatedFromFactory;
import net.fortuna.ical4j.model.parameter.DelegatedToFactory;
import net.fortuna.ical4j.model.parameter.DirFactory;
import net.fortuna.ical4j.model.parameter.Display;
import net.fortuna.ical4j.model.parameter.Email;
import net.fortuna.ical4j.model.parameter.EncodingFactory;
import net.fortuna.ical4j.model.parameter.FbTypeFactory;
import net.fortuna.ical4j.model.parameter.Feature;
import net.fortuna.ical4j.model.parameter.FmtTypeFactory;
import net.fortuna.ical4j.model.parameter.Label;
import net.fortuna.ical4j.model.parameter.LanguageFactory;
import net.fortuna.ical4j.model.parameter.MemberFactory;
import net.fortuna.ical4j.model.parameter.ParameterFactoryWrapper;
import net.fortuna.ical4j.model.parameter.PartStatFactory;
import net.fortuna.ical4j.model.parameter.RangeFactory;
import net.fortuna.ical4j.model.parameter.RelTypeFactory;
import net.fortuna.ical4j.model.parameter.RelatedFactory;
import net.fortuna.ical4j.model.parameter.RoleFactory;
import net.fortuna.ical4j.model.parameter.RsvpFactory;
import net.fortuna.ical4j.model.parameter.SentByFactory;
import net.fortuna.ical4j.model.parameter.TypeFactory;
import net.fortuna.ical4j.model.parameter.TzIdFactory;
import net.fortuna.ical4j.model.parameter.ValueFactory;
import net.fortuna.ical4j.model.parameter.XParameterFactory;
import net.fortuna.ical4j.model.property.Action;
import net.fortuna.ical4j.model.property.Attach;
import net.fortuna.ical4j.model.property.Attendee;
import net.fortuna.ical4j.model.property.BusyType;
import net.fortuna.ical4j.model.property.CalScale;
import net.fortuna.ical4j.model.property.Categories;
import net.fortuna.ical4j.model.property.Clazz;
import net.fortuna.ical4j.model.property.Color;
import net.fortuna.ical4j.model.property.Comment;
import net.fortuna.ical4j.model.property.Completed;
import net.fortuna.ical4j.model.property.Conference;
import net.fortuna.ical4j.model.property.Contact;
import net.fortuna.ical4j.model.property.Country;
import net.fortuna.ical4j.model.property.Created;
import net.fortuna.ical4j.model.property.DefaultPropertyFactory;
import net.fortuna.ical4j.model.property.Description;
import net.fortuna.ical4j.model.property.DtEnd;
import net.fortuna.ical4j.model.property.DtStampFactory;
import net.fortuna.ical4j.model.property.DtStart;
import net.fortuna.ical4j.model.property.Due;
import net.fortuna.ical4j.model.property.Duration;
import net.fortuna.ical4j.model.property.ExDate;
import net.fortuna.ical4j.model.property.ExRule;
import net.fortuna.ical4j.model.property.FreeBusy;
import net.fortuna.ical4j.model.property.Geo;
import net.fortuna.ical4j.model.property.Image;
import net.fortuna.ical4j.model.property.LastModified;
import net.fortuna.ical4j.model.property.Location;
import net.fortuna.ical4j.model.property.LocationType;
import net.fortuna.ical4j.model.property.Method;
import net.fortuna.ical4j.model.property.Name;
import net.fortuna.ical4j.model.property.Organizer;
import net.fortuna.ical4j.model.property.PercentComplete;
import net.fortuna.ical4j.model.property.Postalcode;
import net.fortuna.ical4j.model.property.Priority;
import net.fortuna.ical4j.model.property.ProdId;
import net.fortuna.ical4j.model.property.PropertyFactoryWrapper;
import net.fortuna.ical4j.model.property.RDate;
import net.fortuna.ical4j.model.property.RRule;
import net.fortuna.ical4j.model.property.RecurrenceId;
import net.fortuna.ical4j.model.property.RefreshInterval;
import net.fortuna.ical4j.model.property.Region;
import net.fortuna.ical4j.model.property.RelatedTo;
import net.fortuna.ical4j.model.property.Repeat;
import net.fortuna.ical4j.model.property.RequestStatusFactory;
import net.fortuna.ical4j.model.property.Resources;
import net.fortuna.ical4j.model.property.Sequence;
import net.fortuna.ical4j.model.property.Source;
import net.fortuna.ical4j.model.property.Status;
import net.fortuna.ical4j.model.property.StreetAddress;
import net.fortuna.ical4j.model.property.Summary;
import net.fortuna.ical4j.model.property.Tel;
import net.fortuna.ical4j.model.property.Transp;
import net.fortuna.ical4j.model.property.Trigger;
import net.fortuna.ical4j.model.property.TzId;
import net.fortuna.ical4j.model.property.TzName;
import net.fortuna.ical4j.model.property.TzOffsetFrom;
import net.fortuna.ical4j.model.property.TzOffsetTo;
import net.fortuna.ical4j.model.property.TzUrl;
import net.fortuna.ical4j.model.property.Uid;
import net.fortuna.ical4j.model.property.Url;
import net.fortuna.ical4j.model.property.Version;
import net.fortuna.ical4j.model.property.XPropertyFactory;
import org.codehaus.groovy.reflection.ClassInfo;
import org.codehaus.groovy.runtime.ScriptBytecodeAdapter;
import org.codehaus.groovy.runtime.callsite.CallSite;
import org.codehaus.groovy.runtime.callsite.CallSiteArray;

public class ContentBuilder
extends FactoryBuilderSupport {
    private static /* synthetic */ ClassInfo $staticClassInfo;
    public static transient /* synthetic */ boolean __$stMC;
    private static /* synthetic */ SoftReference $callSiteArray;

    public ContentBuilder(boolean init) {
        CallSite[] callSiteArray = ContentBuilder.$getCallSiteArray();
        super(init);
    }

    @Generated
    public ContentBuilder() {
        CallSite[] callSiteArray = ContentBuilder.$getCallSiteArray();
        this(true);
    }

    public Object registerCalendarAndCollections() {
        CallSite[] callSiteArray = ContentBuilder.$getCallSiteArray();
        callSiteArray[0].callCurrent(this, "calendar", callSiteArray[1].callConstructor(CalendarFactory.class));
        return callSiteArray[2].callCurrent(this, "parameters", callSiteArray[3].callConstructor(ParameterListFactory.class));
    }

    public Object registerComponents() {
        CallSite[] callSiteArray = ContentBuilder.$getCallSiteArray();
        callSiteArray[4].callCurrent(this, "available", callSiteArray[5].callConstructor(AvailableFactory.class));
        callSiteArray[6].callCurrent(this, "daylight", callSiteArray[7].callConstructor(DaylightFactory.class));
        callSiteArray[8].callCurrent(this, "standard", callSiteArray[9].callConstructor(StandardFactory.class));
        callSiteArray[10].callCurrent(this, "valarm", callSiteArray[11].callConstructor(VAlarmFactory.class));
        callSiteArray[12].callCurrent(this, "vavailability", callSiteArray[13].callConstructor(VAvailabilityFactory.class));
        callSiteArray[14].callCurrent(this, "vevent", callSiteArray[15].callConstructor(VEventFactory.class));
        callSiteArray[16].callCurrent(this, "vfreebusy", callSiteArray[17].callConstructor(VFreeBusyFactory.class));
        callSiteArray[18].callCurrent(this, "vjournal", callSiteArray[19].callConstructor(VJournalFactory.class));
        callSiteArray[20].callCurrent(this, "vtimezone", callSiteArray[21].callConstructor(VTimeZoneFactory.class));
        callSiteArray[22].callCurrent(this, "vtodo", callSiteArray[23].callConstructor(VToDoFactory.class));
        callSiteArray[24].callCurrent(this, "vvenue", callSiteArray[25].callConstructor(VVenueFactory.class));
        return callSiteArray[26].callCurrent(this, "xcomponent", callSiteArray[27].callConstructor(XComponentFactory.class));
    }

    public Object registerProperties() {
        CallSite[] callSiteArray = ContentBuilder.$getCallSiteArray();
        callSiteArray[28].callCurrent(this, "action", callSiteArray[29].callConstructor(PropertyFactoryWrapper.class, Action.class, callSiteArray[30].callConstructor(Action.Factory.class)));
        callSiteArray[31].callCurrent(this, "attach", callSiteArray[32].callConstructor(PropertyFactoryWrapper.class, Attach.class, callSiteArray[33].callConstructor(Attach.Factory.class)));
        callSiteArray[34].callCurrent(this, "attendee", callSiteArray[35].callConstructor(PropertyFactoryWrapper.class, Attendee.class, callSiteArray[36].callConstructor(Attendee.Factory.class)));
        callSiteArray[37].callCurrent(this, "busytype", callSiteArray[38].callConstructor(PropertyFactoryWrapper.class, BusyType.class, callSiteArray[39].callConstructor(BusyType.Factory.class)));
        callSiteArray[40].callCurrent(this, "calscale", callSiteArray[41].callConstructor(PropertyFactoryWrapper.class, CalScale.class, callSiteArray[42].callConstructor(CalScale.Factory.class)));
        callSiteArray[43].callCurrent(this, "categories", callSiteArray[44].callConstructor(PropertyFactoryWrapper.class, Categories.class, callSiteArray[45].callConstructor(Categories.Factory.class)));
        callSiteArray[46].callCurrent(this, "class", callSiteArray[47].callConstructor(PropertyFactoryWrapper.class, Clazz.class, callSiteArray[48].callConstructor(Clazz.Factory.class)));
        callSiteArray[49].callCurrent(this, "comment", callSiteArray[50].callConstructor(DefaultPropertyFactory.class, ScriptBytecodeAdapter.createMap(new Object[]{"klass", Comment.class})));
        callSiteArray[51].callCurrent(this, "completed", callSiteArray[52].callConstructor(DefaultPropertyFactory.class, ScriptBytecodeAdapter.createMap(new Object[]{"klass", Completed.class})));
        callSiteArray[53].callCurrent(this, "contact", callSiteArray[54].callConstructor(DefaultPropertyFactory.class, ScriptBytecodeAdapter.createMap(new Object[]{"klass", Contact.class})));
        callSiteArray[55].callCurrent(this, "country", callSiteArray[56].callConstructor(DefaultPropertyFactory.class, ScriptBytecodeAdapter.createMap(new Object[]{"klass", Country.class})));
        callSiteArray[57].callCurrent(this, "created", callSiteArray[58].callConstructor(DefaultPropertyFactory.class, ScriptBytecodeAdapter.createMap(new Object[]{"klass", Created.class})));
        callSiteArray[59].callCurrent(this, "description", callSiteArray[60].callConstructor(DefaultPropertyFactory.class, ScriptBytecodeAdapter.createMap(new Object[]{"klass", Description.class})));
        callSiteArray[61].callCurrent(this, "dtend", callSiteArray[62].callConstructor(DefaultPropertyFactory.class, ScriptBytecodeAdapter.createMap(new Object[]{"klass", DtEnd.class})));
        callSiteArray[63].callCurrent(this, "dtstamp", callSiteArray[64].callConstructor(DtStampFactory.class));
        callSiteArray[65].callCurrent(this, "dtstart", callSiteArray[66].callConstructor(DefaultPropertyFactory.class, ScriptBytecodeAdapter.createMap(new Object[]{"klass", DtStart.class})));
        callSiteArray[67].callCurrent(this, "due", callSiteArray[68].callConstructor(DefaultPropertyFactory.class, ScriptBytecodeAdapter.createMap(new Object[]{"klass", Due.class})));
        callSiteArray[69].callCurrent(this, "duration", callSiteArray[70].callConstructor(DefaultPropertyFactory.class, ScriptBytecodeAdapter.createMap(new Object[]{"klass", Duration.class})));
        callSiteArray[71].callCurrent(this, "exdate", callSiteArray[72].callConstructor(DefaultPropertyFactory.class, ScriptBytecodeAdapter.createMap(new Object[]{"klass", ExDate.class})));
        callSiteArray[73].callCurrent(this, "exrule", callSiteArray[74].callConstructor(DefaultPropertyFactory.class, ScriptBytecodeAdapter.createMap(new Object[]{"klass", ExRule.class})));
        callSiteArray[75].callCurrent(this, "freebusy", callSiteArray[76].callConstructor(DefaultPropertyFactory.class, ScriptBytecodeAdapter.createMap(new Object[]{"klass", FreeBusy.class})));
        callSiteArray[77].callCurrent(this, "geo", callSiteArray[78].callConstructor(DefaultPropertyFactory.class, ScriptBytecodeAdapter.createMap(new Object[]{"klass", Geo.class})));
        callSiteArray[79].callCurrent(this, "lastmodified", callSiteArray[80].callConstructor(DefaultPropertyFactory.class, ScriptBytecodeAdapter.createMap(new Object[]{"klass", LastModified.class})));
        callSiteArray[81].callCurrent(this, "location", callSiteArray[82].callConstructor(DefaultPropertyFactory.class, ScriptBytecodeAdapter.createMap(new Object[]{"klass", Location.class})));
        callSiteArray[83].callCurrent(this, "locationtype", callSiteArray[84].callConstructor(DefaultPropertyFactory.class, ScriptBytecodeAdapter.createMap(new Object[]{"klass", LocationType.class})));
        callSiteArray[85].callCurrent(this, "method", callSiteArray[86].callConstructor(PropertyFactoryWrapper.class, Method.class, callSiteArray[87].callConstructor(Method.Factory.class)));
        callSiteArray[88].callCurrent(this, "name", callSiteArray[89].callConstructor(DefaultPropertyFactory.class, ScriptBytecodeAdapter.createMap(new Object[]{"klass", Name.class})));
        callSiteArray[90].callCurrent(this, "organizer", callSiteArray[91].callConstructor(DefaultPropertyFactory.class, ScriptBytecodeAdapter.createMap(new Object[]{"klass", Organizer.class})));
        callSiteArray[92].callCurrent(this, "percentcomplete", callSiteArray[93].callConstructor(DefaultPropertyFactory.class, ScriptBytecodeAdapter.createMap(new Object[]{"klass", PercentComplete.class})));
        callSiteArray[94].callCurrent(this, "postalcode", callSiteArray[95].callConstructor(DefaultPropertyFactory.class, ScriptBytecodeAdapter.createMap(new Object[]{"klass", Postalcode.class})));
        callSiteArray[96].callCurrent(this, "priority", callSiteArray[97].callConstructor(PropertyFactoryWrapper.class, Priority.class, callSiteArray[98].callConstructor(Priority.Factory.class)));
        callSiteArray[99].callCurrent(this, "prodid", callSiteArray[100].callConstructor(DefaultPropertyFactory.class, ScriptBytecodeAdapter.createMap(new Object[]{"klass", ProdId.class})));
        callSiteArray[101].callCurrent(this, "rdate", callSiteArray[102].callConstructor(DefaultPropertyFactory.class, ScriptBytecodeAdapter.createMap(new Object[]{"klass", RDate.class})));
        callSiteArray[103].callCurrent(this, "recurrenceid", callSiteArray[104].callConstructor(DefaultPropertyFactory.class, ScriptBytecodeAdapter.createMap(new Object[]{"klass", RecurrenceId.class})));
        callSiteArray[105].callCurrent(this, "region", callSiteArray[106].callConstructor(DefaultPropertyFactory.class, ScriptBytecodeAdapter.createMap(new Object[]{"klass", Region.class})));
        callSiteArray[107].callCurrent(this, "relatedto", callSiteArray[108].callConstructor(DefaultPropertyFactory.class, ScriptBytecodeAdapter.createMap(new Object[]{"klass", RelatedTo.class})));
        callSiteArray[109].callCurrent(this, "repeat", callSiteArray[110].callConstructor(DefaultPropertyFactory.class, ScriptBytecodeAdapter.createMap(new Object[]{"klass", Repeat.class})));
        callSiteArray[111].callCurrent(this, "requeststatus", callSiteArray[112].callConstructor(RequestStatusFactory.class));
        callSiteArray[113].callCurrent(this, "resources", callSiteArray[114].callConstructor(DefaultPropertyFactory.class, ScriptBytecodeAdapter.createMap(new Object[]{"klass", Resources.class})));
        callSiteArray[115].callCurrent(this, "rrule", callSiteArray[116].callConstructor(DefaultPropertyFactory.class, ScriptBytecodeAdapter.createMap(new Object[]{"klass", RRule.class})));
        callSiteArray[117].callCurrent(this, "sequence", callSiteArray[118].callConstructor(DefaultPropertyFactory.class, ScriptBytecodeAdapter.createMap(new Object[]{"klass", Sequence.class})));
        callSiteArray[119].callCurrent(this, "status", callSiteArray[120].callConstructor(PropertyFactoryWrapper.class, Status.class, callSiteArray[121].callConstructor(Status.Factory.class)));
        callSiteArray[122].callCurrent(this, "streetaddress", callSiteArray[123].callConstructor(DefaultPropertyFactory.class, ScriptBytecodeAdapter.createMap(new Object[]{"klass", StreetAddress.class})));
        callSiteArray[124].callCurrent(this, "summary", callSiteArray[125].callConstructor(DefaultPropertyFactory.class, ScriptBytecodeAdapter.createMap(new Object[]{"klass", Summary.class})));
        callSiteArray[126].callCurrent(this, "tel", callSiteArray[127].callConstructor(DefaultPropertyFactory.class, ScriptBytecodeAdapter.createMap(new Object[]{"klass", Tel.class})));
        callSiteArray[128].callCurrent(this, "transp", callSiteArray[129].callConstructor(PropertyFactoryWrapper.class, Transp.class, callSiteArray[130].callConstructor(Transp.Factory.class)));
        callSiteArray[131].callCurrent(this, "trigger", callSiteArray[132].callConstructor(DefaultPropertyFactory.class, ScriptBytecodeAdapter.createMap(new Object[]{"klass", Trigger.class})));
        callSiteArray[133].callCurrent(this, "tzid", callSiteArray[134].callConstructor(DefaultPropertyFactory.class, ScriptBytecodeAdapter.createMap(new Object[]{"klass", TzId.class})));
        callSiteArray[135].callCurrent(this, "tzname", callSiteArray[136].callConstructor(DefaultPropertyFactory.class, ScriptBytecodeAdapter.createMap(new Object[]{"klass", TzName.class})));
        callSiteArray[137].callCurrent(this, "tzoffsetfrom", callSiteArray[138].callConstructor(DefaultPropertyFactory.class, ScriptBytecodeAdapter.createMap(new Object[]{"klass", TzOffsetFrom.class})));
        callSiteArray[139].callCurrent(this, "tzoffsetto", callSiteArray[140].callConstructor(DefaultPropertyFactory.class, ScriptBytecodeAdapter.createMap(new Object[]{"klass", TzOffsetTo.class})));
        callSiteArray[141].callCurrent(this, "tzurl", callSiteArray[142].callConstructor(DefaultPropertyFactory.class, ScriptBytecodeAdapter.createMap(new Object[]{"klass", TzUrl.class})));
        callSiteArray[143].callCurrent(this, "uid", callSiteArray[144].callConstructor(DefaultPropertyFactory.class, ScriptBytecodeAdapter.createMap(new Object[]{"klass", Uid.class})));
        callSiteArray[145].callCurrent(this, "url", callSiteArray[146].callConstructor(DefaultPropertyFactory.class, ScriptBytecodeAdapter.createMap(new Object[]{"klass", Url.class})));
        callSiteArray[147].callCurrent(this, "version", callSiteArray[148].callConstructor(PropertyFactoryWrapper.class, Version.class, callSiteArray[149].callConstructor(Version.Factory.class)));
        callSiteArray[150].callCurrent(this, "xproperty", callSiteArray[151].callConstructor(XPropertyFactory.class));
        callSiteArray[152].callCurrent(this, "color", callSiteArray[153].callConstructor(PropertyFactoryWrapper.class, Color.class, callSiteArray[154].callConstructor(Color.Factory.class)));
        callSiteArray[155].callCurrent(this, "conference", callSiteArray[156].callConstructor(PropertyFactoryWrapper.class, Conference.class, callSiteArray[157].callConstructor(Conference.Factory.class)));
        callSiteArray[158].callCurrent(this, "image", callSiteArray[159].callConstructor(PropertyFactoryWrapper.class, Image.class, callSiteArray[160].callConstructor(Image.Factory.class)));
        callSiteArray[161].callCurrent(this, "refreshinterval", callSiteArray[162].callConstructor(PropertyFactoryWrapper.class, RefreshInterval.class, callSiteArray[163].callConstructor(RefreshInterval.Factory.class)));
        return callSiteArray[164].callCurrent(this, "source", callSiteArray[165].callConstructor(PropertyFactoryWrapper.class, Source.class, callSiteArray[166].callConstructor(Source.Factory.class)));
    }

    public Object registerParameters() {
        CallSite[] callSiteArray = ContentBuilder.$getCallSiteArray();
        callSiteArray[167].callCurrent(this, "abbrev", callSiteArray[168].callConstructor(AbbrevFactory.class));
        callSiteArray[169].callCurrent(this, "altrep", callSiteArray[170].callConstructor(AltRepFactory.class));
        callSiteArray[171].callCurrent(this, "cn", callSiteArray[172].callConstructor(CnFactory.class));
        callSiteArray[173].callCurrent(this, "cutype", callSiteArray[174].callConstructor(CuTypeFactory.class));
        callSiteArray[175].callCurrent(this, "delegatedfrom", callSiteArray[176].callConstructor(DelegatedFromFactory.class));
        callSiteArray[177].callCurrent(this, "delegatedto", callSiteArray[178].callConstructor(DelegatedToFactory.class));
        callSiteArray[179].callCurrent(this, "dir", callSiteArray[180].callConstructor(DirFactory.class));
        callSiteArray[181].callCurrent(this, "encoding", callSiteArray[182].callConstructor(EncodingFactory.class));
        callSiteArray[183].callCurrent(this, "fbtype", callSiteArray[184].callConstructor(FbTypeFactory.class));
        callSiteArray[185].callCurrent(this, "fmttype", callSiteArray[186].callConstructor(FmtTypeFactory.class));
        callSiteArray[187].callCurrent(this, "language", callSiteArray[188].callConstructor(LanguageFactory.class));
        callSiteArray[189].callCurrent(this, "member", callSiteArray[190].callConstructor(MemberFactory.class));
        callSiteArray[191].callCurrent(this, "partstat", callSiteArray[192].callConstructor(PartStatFactory.class));
        callSiteArray[193].callCurrent(this, "range", callSiteArray[194].callConstructor(RangeFactory.class));
        callSiteArray[195].callCurrent(this, "related", callSiteArray[196].callConstructor(RelatedFactory.class));
        callSiteArray[197].callCurrent(this, "reltype", callSiteArray[198].callConstructor(RelTypeFactory.class));
        callSiteArray[199].callCurrent(this, "role", callSiteArray[200].callConstructor(RoleFactory.class));
        callSiteArray[201].callCurrent(this, "rsvp", callSiteArray[202].callConstructor(RsvpFactory.class));
        callSiteArray[203].callCurrent(this, "sentby", callSiteArray[204].callConstructor(SentByFactory.class));
        callSiteArray[205].callCurrent(this, "type", callSiteArray[206].callConstructor(TypeFactory.class));
        callSiteArray[207].callCurrent(this, "tzid_", callSiteArray[208].callConstructor(TzIdFactory.class));
        callSiteArray[209].callCurrent(this, "value", callSiteArray[210].callConstructor(ValueFactory.class));
        callSiteArray[211].callCurrent(this, "xparameter", callSiteArray[212].callConstructor(XParameterFactory.class));
        callSiteArray[213].callCurrent(this, "display", callSiteArray[214].callConstructor(ParameterFactoryWrapper.class, Display.class, callSiteArray[215].callConstructor(Display.Factory.class)));
        callSiteArray[216].callCurrent(this, "email", callSiteArray[217].callConstructor(ParameterFactoryWrapper.class, Email.class, callSiteArray[218].callConstructor(Email.Factory.class)));
        callSiteArray[219].callCurrent(this, "feature", callSiteArray[220].callConstructor(ParameterFactoryWrapper.class, Feature.class, callSiteArray[221].callConstructor(Feature.Factory.class)));
        return callSiteArray[222].callCurrent(this, "label", callSiteArray[223].callConstructor(ParameterFactoryWrapper.class, Label.class, callSiteArray[224].callConstructor(Label.Factory.class)));
    }

    protected /* synthetic */ MetaClass $getStaticMetaClass() {
        if (this.getClass() != ContentBuilder.class) {
            return ScriptBytecodeAdapter.initMetaClass(this);
        }
        ClassInfo classInfo = $staticClassInfo;
        if (classInfo == null) {
            $staticClassInfo = classInfo = ClassInfo.getClassInfo(this.getClass());
        }
        return classInfo.getMetaClass();
    }

    private static /* synthetic */ void $createCallSiteArray_1(String[] stringArray) {
        stringArray[0] = "registerFactory";
        stringArray[1] = "<$constructor$>";
        stringArray[2] = "registerFactory";
        stringArray[3] = "<$constructor$>";
        stringArray[4] = "registerFactory";
        stringArray[5] = "<$constructor$>";
        stringArray[6] = "registerFactory";
        stringArray[7] = "<$constructor$>";
        stringArray[8] = "registerFactory";
        stringArray[9] = "<$constructor$>";
        stringArray[10] = "registerFactory";
        stringArray[11] = "<$constructor$>";
        stringArray[12] = "registerFactory";
        stringArray[13] = "<$constructor$>";
        stringArray[14] = "registerFactory";
        stringArray[15] = "<$constructor$>";
        stringArray[16] = "registerFactory";
        stringArray[17] = "<$constructor$>";
        stringArray[18] = "registerFactory";
        stringArray[19] = "<$constructor$>";
        stringArray[20] = "registerFactory";
        stringArray[21] = "<$constructor$>";
        stringArray[22] = "registerFactory";
        stringArray[23] = "<$constructor$>";
        stringArray[24] = "registerFactory";
        stringArray[25] = "<$constructor$>";
        stringArray[26] = "registerFactory";
        stringArray[27] = "<$constructor$>";
        stringArray[28] = "registerFactory";
        stringArray[29] = "<$constructor$>";
        stringArray[30] = "<$constructor$>";
        stringArray[31] = "registerFactory";
        stringArray[32] = "<$constructor$>";
        stringArray[33] = "<$constructor$>";
        stringArray[34] = "registerFactory";
        stringArray[35] = "<$constructor$>";
        stringArray[36] = "<$constructor$>";
        stringArray[37] = "registerFactory";
        stringArray[38] = "<$constructor$>";
        stringArray[39] = "<$constructor$>";
        stringArray[40] = "registerFactory";
        stringArray[41] = "<$constructor$>";
        stringArray[42] = "<$constructor$>";
        stringArray[43] = "registerFactory";
        stringArray[44] = "<$constructor$>";
        stringArray[45] = "<$constructor$>";
        stringArray[46] = "registerFactory";
        stringArray[47] = "<$constructor$>";
        stringArray[48] = "<$constructor$>";
        stringArray[49] = "registerFactory";
        stringArray[50] = "<$constructor$>";
        stringArray[51] = "registerFactory";
        stringArray[52] = "<$constructor$>";
        stringArray[53] = "registerFactory";
        stringArray[54] = "<$constructor$>";
        stringArray[55] = "registerFactory";
        stringArray[56] = "<$constructor$>";
        stringArray[57] = "registerFactory";
        stringArray[58] = "<$constructor$>";
        stringArray[59] = "registerFactory";
        stringArray[60] = "<$constructor$>";
        stringArray[61] = "registerFactory";
        stringArray[62] = "<$constructor$>";
        stringArray[63] = "registerFactory";
        stringArray[64] = "<$constructor$>";
        stringArray[65] = "registerFactory";
        stringArray[66] = "<$constructor$>";
        stringArray[67] = "registerFactory";
        stringArray[68] = "<$constructor$>";
        stringArray[69] = "registerFactory";
        stringArray[70] = "<$constructor$>";
        stringArray[71] = "registerFactory";
        stringArray[72] = "<$constructor$>";
        stringArray[73] = "registerFactory";
        stringArray[74] = "<$constructor$>";
        stringArray[75] = "registerFactory";
        stringArray[76] = "<$constructor$>";
        stringArray[77] = "registerFactory";
        stringArray[78] = "<$constructor$>";
        stringArray[79] = "registerFactory";
        stringArray[80] = "<$constructor$>";
        stringArray[81] = "registerFactory";
        stringArray[82] = "<$constructor$>";
        stringArray[83] = "registerFactory";
        stringArray[84] = "<$constructor$>";
        stringArray[85] = "registerFactory";
        stringArray[86] = "<$constructor$>";
        stringArray[87] = "<$constructor$>";
        stringArray[88] = "registerFactory";
        stringArray[89] = "<$constructor$>";
        stringArray[90] = "registerFactory";
        stringArray[91] = "<$constructor$>";
        stringArray[92] = "registerFactory";
        stringArray[93] = "<$constructor$>";
        stringArray[94] = "registerFactory";
        stringArray[95] = "<$constructor$>";
        stringArray[96] = "registerFactory";
        stringArray[97] = "<$constructor$>";
        stringArray[98] = "<$constructor$>";
        stringArray[99] = "registerFactory";
        stringArray[100] = "<$constructor$>";
        stringArray[101] = "registerFactory";
        stringArray[102] = "<$constructor$>";
        stringArray[103] = "registerFactory";
        stringArray[104] = "<$constructor$>";
        stringArray[105] = "registerFactory";
        stringArray[106] = "<$constructor$>";
        stringArray[107] = "registerFactory";
        stringArray[108] = "<$constructor$>";
        stringArray[109] = "registerFactory";
        stringArray[110] = "<$constructor$>";
        stringArray[111] = "registerFactory";
        stringArray[112] = "<$constructor$>";
        stringArray[113] = "registerFactory";
        stringArray[114] = "<$constructor$>";
        stringArray[115] = "registerFactory";
        stringArray[116] = "<$constructor$>";
        stringArray[117] = "registerFactory";
        stringArray[118] = "<$constructor$>";
        stringArray[119] = "registerFactory";
        stringArray[120] = "<$constructor$>";
        stringArray[121] = "<$constructor$>";
        stringArray[122] = "registerFactory";
        stringArray[123] = "<$constructor$>";
        stringArray[124] = "registerFactory";
        stringArray[125] = "<$constructor$>";
        stringArray[126] = "registerFactory";
        stringArray[127] = "<$constructor$>";
        stringArray[128] = "registerFactory";
        stringArray[129] = "<$constructor$>";
        stringArray[130] = "<$constructor$>";
        stringArray[131] = "registerFactory";
        stringArray[132] = "<$constructor$>";
        stringArray[133] = "registerFactory";
        stringArray[134] = "<$constructor$>";
        stringArray[135] = "registerFactory";
        stringArray[136] = "<$constructor$>";
        stringArray[137] = "registerFactory";
        stringArray[138] = "<$constructor$>";
        stringArray[139] = "registerFactory";
        stringArray[140] = "<$constructor$>";
        stringArray[141] = "registerFactory";
        stringArray[142] = "<$constructor$>";
        stringArray[143] = "registerFactory";
        stringArray[144] = "<$constructor$>";
        stringArray[145] = "registerFactory";
        stringArray[146] = "<$constructor$>";
        stringArray[147] = "registerFactory";
        stringArray[148] = "<$constructor$>";
        stringArray[149] = "<$constructor$>";
        stringArray[150] = "registerFactory";
        stringArray[151] = "<$constructor$>";
        stringArray[152] = "registerFactory";
        stringArray[153] = "<$constructor$>";
        stringArray[154] = "<$constructor$>";
        stringArray[155] = "registerFactory";
        stringArray[156] = "<$constructor$>";
        stringArray[157] = "<$constructor$>";
        stringArray[158] = "registerFactory";
        stringArray[159] = "<$constructor$>";
        stringArray[160] = "<$constructor$>";
        stringArray[161] = "registerFactory";
        stringArray[162] = "<$constructor$>";
        stringArray[163] = "<$constructor$>";
        stringArray[164] = "registerFactory";
        stringArray[165] = "<$constructor$>";
        stringArray[166] = "<$constructor$>";
        stringArray[167] = "registerFactory";
        stringArray[168] = "<$constructor$>";
        stringArray[169] = "registerFactory";
        stringArray[170] = "<$constructor$>";
        stringArray[171] = "registerFactory";
        stringArray[172] = "<$constructor$>";
        stringArray[173] = "registerFactory";
        stringArray[174] = "<$constructor$>";
        stringArray[175] = "registerFactory";
        stringArray[176] = "<$constructor$>";
        stringArray[177] = "registerFactory";
        stringArray[178] = "<$constructor$>";
        stringArray[179] = "registerFactory";
        stringArray[180] = "<$constructor$>";
        stringArray[181] = "registerFactory";
        stringArray[182] = "<$constructor$>";
        stringArray[183] = "registerFactory";
        stringArray[184] = "<$constructor$>";
        stringArray[185] = "registerFactory";
        stringArray[186] = "<$constructor$>";
        stringArray[187] = "registerFactory";
        stringArray[188] = "<$constructor$>";
        stringArray[189] = "registerFactory";
        stringArray[190] = "<$constructor$>";
        stringArray[191] = "registerFactory";
        stringArray[192] = "<$constructor$>";
        stringArray[193] = "registerFactory";
        stringArray[194] = "<$constructor$>";
        stringArray[195] = "registerFactory";
        stringArray[196] = "<$constructor$>";
        stringArray[197] = "registerFactory";
        stringArray[198] = "<$constructor$>";
        stringArray[199] = "registerFactory";
        stringArray[200] = "<$constructor$>";
        stringArray[201] = "registerFactory";
        stringArray[202] = "<$constructor$>";
        stringArray[203] = "registerFactory";
        stringArray[204] = "<$constructor$>";
        stringArray[205] = "registerFactory";
        stringArray[206] = "<$constructor$>";
        stringArray[207] = "registerFactory";
        stringArray[208] = "<$constructor$>";
        stringArray[209] = "registerFactory";
        stringArray[210] = "<$constructor$>";
        stringArray[211] = "registerFactory";
        stringArray[212] = "<$constructor$>";
        stringArray[213] = "registerFactory";
        stringArray[214] = "<$constructor$>";
        stringArray[215] = "<$constructor$>";
        stringArray[216] = "registerFactory";
        stringArray[217] = "<$constructor$>";
        stringArray[218] = "<$constructor$>";
        stringArray[219] = "registerFactory";
        stringArray[220] = "<$constructor$>";
        stringArray[221] = "<$constructor$>";
        stringArray[222] = "registerFactory";
        stringArray[223] = "<$constructor$>";
        stringArray[224] = "<$constructor$>";
    }

    private static /* synthetic */ CallSiteArray $createCallSiteArray() {
        String[] stringArray = new String[225];
        ContentBuilder.$createCallSiteArray_1(stringArray);
        return new CallSiteArray(ContentBuilder.class, stringArray);
    }

    private static /* synthetic */ CallSite[] $getCallSiteArray() {
        CallSiteArray callSiteArray;
        if ($callSiteArray == null || (callSiteArray = (CallSiteArray)$callSiteArray.get()) == null) {
            callSiteArray = ContentBuilder.$createCallSiteArray();
            $callSiteArray = new SoftReference<CallSiteArray>(callSiteArray);
        }
        return callSiteArray.array;
    }
}

